# Generated by Django 3.0 on 2021-10-02 09:49

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=12, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=31, null=True)),
                ('last_name', models.CharField(blank=True, max_length=31, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_moder', models.BooleanField(default=False)),
                ('is_secretar', models.BooleanField(default=False)),
                ('is_expert', models.BooleanField(default=False)),
                ('is_vned', models.BooleanField(default=False)),
                ('is_analit', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('moder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='acc_moderat', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'acc',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'effect',
            },
        ),
        migrations.CreateModel(
            name='VnedPPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=63, unique=True)),
                ('problem', models.TextField()),
                ('solution', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='pppus/files/')),
                ('co_author_procent', models.CharField(blank=True, max_length=2, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vned_author', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.Category')),
                ('co_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vned_co_author', to=settings.AUTH_USER_MODEL)),
                ('effect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.Effect')),
                ('moder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='vned_moder', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=63, unique=True)),
                ('problem', models.TextField()),
                ('solution', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='pppus/files/')),
                ('co_author_procent', models.CharField(blank=True, max_length=2, null=True)),
                ('status', models.CharField(choices=[('1', 'first_checking'), ('2', 'second_checking'), ('3', 'expert_checking'), ('4', 'need_update'), ('5', 'execution'), ('6', 'finalized'), ('7', 'denied')], default=1, max_length=63)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.Category')),
                ('co_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='co_author', to=settings.AUTH_USER_MODEL)),
                ('effect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.Effect')),
                ('moder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ppu_moder', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ppu',
            },
        ),
    ]
